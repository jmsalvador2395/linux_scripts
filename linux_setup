#!/bin/bash

source helper_functions

function pull_git_repos() {
	repos=(
		"confs"
	)

	for i in "${repos[@]}"; do
		mkdir -p ~/repos/$i
		cd ~/repos/$i
		git init
		git remote add ${i} git@github.com:jmsalvador2395/${i}.git
		git pull ${i} master
		echo "finished pulling git repository"
		cd ..
	done
}

function create_directories() {
	base_dir=${HOME}/mnt/
	mkdir -p ${base_dir}/media
	mkdir -p ${base_dir}/.h
	mkdir -p ${base_dir}/bdi
}

function install_conda() {

	#install anaconda
	sudo apt install \
		libgl1-mesa-glx \
		libegl1-mesa \
		libxrandr2 \
		libxrandr2 \
		libxss1 \
		libxcursor1 \
		libxcomposite1 \
		libasound2 \
		libxi6 \
		libxtst6 \
		-y
	
	#may have to change this later
	wget https://repo.anaconda.com/archive/Anaconda3-2022.05-Linux-x86_64.sh

	sh *.sh -b -p ${HOME}/anaconda3
	#rm *.sh
}

function install_brave() {

    sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
    echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main"|sudo tee /etc/apt/sources.list.d/brave-browser-release.list
    sudo apt update
    sudo apt install brave-browser

}

function install_signal() {

	#install signal
	wget -O- https://updates.signal.org/desktop/apt/keys.asc | gpg --dearmor > signal-desktop-keyring.gpg
	cat signal-desktop-keyring.gpg | sudo tee -a /usr/share/keyrings/signal-desktop-keyring.gpg > /dev/null

	echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/signal-desktop-keyring.gpg] https://updates.signal.org/desktop/apt xenial main' | \
		sudo tee -a /etc/apt/sources.list.d/signal-xenial.list
	
	sudo apt update && sudo apt install signal-desktop -y

}

function install_spotify() {

	curl -sS https://download.spotify.com/debian/pubkey_7A3A762FAFD4A51F.gpg | sudo gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/spotify.gpg
	echo "deb http://repository.spotify.com stable non-free" | sudo tee /etc/apt/sources.list.d/spotify.list
	sudo apt update && sudo apt install spotify-client

}

install_appimages() {
	cp ~/bin/desktop_entries/* ~/.local/share/applications/
}

function install_pyenv() {

    # install dependencies
    sudo apt update
    sudo apt install \
        build-essential \
        libssl-dev \
        zlib1g-dev \
        libbz2-dev \
        libreadline-dev \
        libsqlite3-dev \
        curl \
        git \
        libncursesw5-dev \
        xz-utils \
        tk-dev \
        libxml2-dev \
        libxmlsec1-dev \
        libffi-dev \
        liblzma-dev

    # run installer
    curl https://pyenv.run | bash

    # append pyenv content to bashrc
    echo cat ~/bin/bashrc/pyenv.sh >> ~/.bashrc
    
}


function install_vscode() {
    echo "code code/add-microsoft-repo boolean true" | sudo debconf-set-selections
    sudo apt-get install wget gpg
    wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
    sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
    echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" |sudo tee /etc/apt/sources.list.d/vscode.list > /dev/null
    rm -f packages.microsoft.gpg

    sudo apt install apt-transport-https
    sudo apt install code
}


function main() {
	cd $HOME

	sudo apt update && sudo apt upgrade -y
	sudo apt dist-upgrade

    # add bashrc lines
    cat ~/bin/bashrc/path.sh > ~/.bashrc

	# git setup
	git config --global user.email jmsalvador2395@gmail.com
	git config --global user.name john

	# directory setup
	pull_git_repos
	install_appimages
	create_directories

	#general installs
	sudo apt install \
        snapd \
		tmux \
		sshfs \
		htop \
		tree \
		python-is-python3 \
		-y

    # snap installs
    sudo snap install snapd
    sudo snap install obsidian --classic

    install_pyenv

    # make tab complete case agnostic
    ignore_case="set completion-ignore-case On"
    if [ ! -f ~/.inputrc ]; then
        echo $ignore_case >> ~/.inputrc
    elif [ "$(grep "${ignore_case}" ~/.inputrc)" == "" ]; then
        echo $ignore_case >> ~/.inputrc
    fi


	# only install this stuff for desktops
	if [ "$1" == "-a" ]; then

		#create temporary download directory
		mkdir .tmp
		cd .tmp

		# external installs
		#install_conda
		install_brave
		install_signal
        install_vscode

		cd $HOME

		#general installs
		sudo apt install \
			mcomix \
			steam \
			mpv \
			dropbox \
			deluge \
            code \
			-y
				
		
		rm -Rf .tmp
	fi

	# one last update just in case
	sudo apt update && sudo apt upgrade -y
	sudo apt dist-upgrade
}

main $@
