#!/usr/bin/env python

import re
import os
import json
import copy
from utils import directory, messages
import argparse
from tqdm import tqdm

def parse_args():
	parser = argparse.ArgumentParser()
	parser.add_argument(
		'-r',
		'--remove',
		default = False,
		action = 'store_true',
		help = 'removes invalid bookmarks'
	)
	return vars(parser.parse_args())
	
def cbm():
	args = parse_args()
	
	# read in bookmarks
	HOME = os.environ['HOME']
	bm_path = f'{HOME}/.local/share/mcomix/bookmarks.json'
	with open(bm_path, 'r') as f:
		bm = json.loads(f.read())
	
	filter_fn = lambda x: directory.file_exists(x[1])


	broken_files = []
	for i, sample in tqdm(enumerate(bm[1]), total=len(bm[1]), desc='Checking for invalid bookmarks'):
		if not directory.file_exists(sample[1]):
			broken_files.append(sample)
	
	msg = f'{len(broken_files)} invalid files found:'
	print('\n' + messages.with_fill(length=len(msg)))
	print(msg)
	print(messages.with_fill(length=len(msg)), end='\n\n')
	if len(broken_files) != 0:
		names = [sample[0] for sample in broken_files]
		print('\n'.join(names).strip('\n'))
		print('\n' + messages.with_fill(length=len(msg)))
	
	if args['remove']:
		new_bm = [
			bm[0],
			list(filter(filter_fn, bm[1]))
		]
		breakpoint()

if __name__ == '__main__':
	cbm()
